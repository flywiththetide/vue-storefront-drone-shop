name: Continous Integration

on:
  workflow_call:
    secrets:
      VERDACCIO_AUTH_TOKEN:
        required: false

    inputs:
      enterprise:
        description: "Flag to use enterprise registry"
        type: boolean
        required: false
        default: false

jobs:
  run-ci:
    name: Run CI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["18.20.2"]
    permissions:
      contents: read
      id-token: write
    timeout-minutes: 15
    if: github.event.pull_request.draft == false
    steps:
      - name: Expose github environment as shell variables
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
          VARS_CONTEXT: ${{ toJson(vars) }}
        run: |
          # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-environment-variable
          # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          to_envs() { jq -r "to_entries[] | \"\(.key)<<$EOF\n\(.value)\n$EOF\n\""; }
          echo "$SECRETS_CONTEXT" | to_envs >> $GITHUB_ENV
      
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Install dependencies
        uses: ./.github/actions/init
        env:
          HUSKY: 0
        with:
          node_version: ${{ matrix.node-version }}
          auth_token: ${{ secrets.VERDACCIO_AUTH_TOKEN }}

      - name: Check licenses ðŸ§ª
        uses: vuestorefront/vue-storefront/actions/check-licenses@main
        with:
          projectPath: ${{ github.workspace }}

      - name: Run the pipeline
        run: ./node_modules/.bin/turbo run build lint test:unit test:integration --cache-dir=.turbo --filter=\[${{ github.event.pull_request.base.sha }}...${{ github.event.pull_request.head.sha }}\]

      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ runner.os }}-${{ github.event.pull_request.head.sha }}
          overwrite: true
          path: |
            coverage
            packages/**/coverage
